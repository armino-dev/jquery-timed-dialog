(()=>{(function(t){t.fn.timedDialog=function(p){this.defaults={type:"info",title:"Info",body:"This is the default body text. You might replace this with your own.",width:320,height:240,appendTo:"body",closeOnEscape:!0,closeOnTimer:!1,timeout:10,timeoutAnimation:!0,isModal:!0,btnDismiss:{text:"Dismiss",class:""},btnConfirm:{text:"Confirm",action:()=>{},class:""}};let i=t.extend({},this.defaults,p),h=document.body,c=document.documentElement,D=[h.scrollHeight,h.offsetHeight,c.clientHeight,c.scrollHeight,c.offsetHeight],O=[h.scrollWidth,h.offsetWidth,c.clientWidth,c.scrollWidth,c.offsetWidth],b=Math.max(...D),g=Math.max(...O),W={info:{icon:{src:"i"},style:"info"},confirmation:{icon:{src:"?"},style:"info"}},m=0;i.icon=W[i.type].icon.src;let k={position:"absolute",top:0,left:0,width:g+"px",height:b+"px","z-index":"2000"},z={position:"absolute",width:i.width+"px",height:i.height+"px","line-height":"20px","z-index":"2001"},d=H(5),w="timed-dialog-"+d,a=t(`<div id="overlay-${w}" class="timed-dialog-overlay"></div>`),n=t(`
                    <div id="${w}" class="timed-dialog">
                        <div class="header">
                            <div class="icon"><span>${i.icon}</span></div>
                            <h1 class="title">${i.title}</h1>
                        </div>
                        <div class="body">${i.body}</div>
                        <div class="action"> </div>
                    </div>
            `),o=t(`<button 
            class="btn btn-primary" 
            style="position:relative;" 
            id="btn-dismiss-${d}">
                <span class="text">${i.btnDismiss.text}</span>
            </button>
        `),y=t(`<button 
            class="btn btn-primary" 
            id="btn-confirm-${d}">
                ${i.btnConfirm.text}
            </button>
        `),v=t(`<button id="btn-close-${d}" class="btn btn-close">x</button>`);if(this.length>1)return this.each(function(){t(this).timedDialog(p)}),this;function H(e){let s="",l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let r=0;r<e;r++)s+=l.charAt(Math.floor(Math.random()*l.length));return s}function f(){m&&window.cancelAnimationFrame(m),t(n).fadeOut(),t(a).fadeOut(500,()=>{t(a).remove()})}t(window).on("resize",()=>{x()}),t(document).on("scroll",()=>{x()});function I(e){let s=t(o).children("span.text").html();t(o).children("span.text").html(s+` (${e})`);let l=setInterval(()=>{e--,t(o).children("span.text").html(s+` (${e})`),e<1&&(clearInterval(l),t(o).trigger("click"))},1e3)}function M(){t(o).on("click",()=>{f()}),t(o).on("mouseenter",()=>{t("span.meter").addClass("hover")}),t(o).on("mouseleave",()=>{t("span.meter").removeClass("hover")}),t(v).on("click",()=>{f()}),t(y).on("click",()=>{if(typeof i.btnConfirm.action=="function"){try{i.btnConfirm.action()}catch(e){console.error(e)}f()}else throw new Error("Confirmation button action must be a callback")}),t(a).on("click",e=>{n.not(e.target)&&n.has(e.target).length===0&&f()})}function E(){let e=t(o).width(),s=t('<span class="meter"></span>');t(s).appendTo(o);let l=1e3*i.timeout,r=e,u,C=T=>{u===void 0&&(u=T);let A=T-u;t(s).width(r),r=e*(1-A/l),A<l&&(m=window.requestAnimationFrame(C))};m=window.requestAnimationFrame(C)}function x(){t(a).css({width:g+"px",height:b+"px"}),t(n).css({left:t(document).scrollLeft()+(t(window).width()-i.width)/2+"px",top:t(document).scrollTop()+(t(window).height()-i.height)/2+"px"})}return this.random=d,this.initialize=()=>{if(!t(".timed-dialog-overlay").length)return t("body").append(a),i.isModal&&a.css(k),t(n).appendTo(a),t(n).css(z),t(window).trigger("resize"),t(v).appendTo(n.children("div.header")),t(o).appendTo(n.children(".action")),i.type=="confirmation"&&t(y).appendTo(n.children(".action")),M(),t(n).hide().fadeIn(300,()=>{i.closeOnTimer&&(I(i.timeout),i.timeoutAnimation&&E())}),this},this.initialize()}})(jQuery);})();
